//***********************************************************************
// Project		    : GeoMatch
// Author           : Shiju P K
// Email			: shijupk@gmail.com
// Created          : 10-01-2010
//
// File Name		: GeoMatch.h
// Last Modified By : Shiju P K
// Last Modified On : 13-07-2010
// Description      : class to implement edge based template matching
//
// Copyright        : (c) . All rights reserved.
//***********************************************************************

#pragma once
#include <cv.h>
#include <cxcore.h>
#include <highgui.h>
#include <math.h>

using namespace std;
using namespace cv;

class GeoMatch
{
private:
	int				noOfCordinates;		//Number of elements in coordinate array
	vector<Point>   cordinates;		    //Coordinates array to store model points	
	int				modelHeight;		//Template height
	int				modelWidth;			//Template width
	vector<double>	edgeMagnitude;		//gradient magnitude
	vector<double>	edgeDerivativeX;	//gradient in X direction
	vector<double>	edgeDerivativeY;	//gradient in Y direction	
	Point			centerOfGravity;	//Center of gravity of template 
	
	bool			modelDefined;
	
	void CreateDoubleMatrix(double **&matrix,CvSize size);//?
	void ReleaseDoubleMatrix(double **&matrix,int size);//?
public:
	GeoMatch(void);
	GeoMatch(const Mat &templateArr);
	~GeoMatch(void);

	int CreateGeoMatchModel(const Mat& templateArr,double,double);
	double FindGeoMatchModel(const Mat& srcarr,double minScore,double greediness, cv::Point resultPoint);
	void DrawContours(Mat& pImage,cv::Point COG,cv::Scalar,int);
	void DrawContours(Mat& pImage,cv::Scalar,int);
};
